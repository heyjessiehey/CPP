1)	Why do you need to allocate new dynamic memory when you increase the size of an existing array of dynamically allocated memory?
We cannot allocate more memory at the end of existing array of memory. Memory tends to get very fragmented. It may cause a crash. Simply, we allocate new dynamic memory and then copy the elements from old memory into the new dynamic memory. 



2)	The Kingdom structure stores the name of the kingdom in an array of char-acters. At the end of the program, we do not use the delete operator to deallocate the memory occupied by the name. Why don't we need to use the delete operator on this array itself? Explain.
The name of the kingdom in an array of characters is not allocated in dynamic memory. There are static memory and dynamic memory. this array is allocated in static memory. Static memory is not allocated by a programmer, it is allocated by operating system at load-time for entire application requires. It is fixed and allocated at time.
However, dynamic memory is allocated and deallocated during the execution by the programmer using "new" and "delete". It must be deallocated in order to prevent memory leaks and consider in case of insufficient memory.


3)	There are two display(...) function definitions. How does the compiler know which definition to call from your main function? 
In OOP language, it allows to use same function identifier if functions' signature is unique. This is called "Function overloading". The complier distinguishes the difference of functions by the function identifier, the parameter types, and the order of the parameter types. 
So, the two display(...) functions have same identifier and same parameter type. However, the functions have different order of the parameter types. First display function  takes one order of parameter and second display function takes two order of parameter.
Therefore, when we call the display function in main function, it depends on how many parameters existed the compiler knows which one has to call. 



4)	Explain what have you have learned in this workshop. Also, using "const" in the parameter types protects values change while implementation of the function. 
First, I've practiced overloading functions and call them in the main function.
Second, I've learned declaring the pointer and initialize it as nullptr Keyword. It is safer way to initialize right away even pointing to null address. It prevents that the pointer is not pointing to dereferencable address.(If this happens, it is difficult to access the dereferencable address.)
Last, I've learned how to allocate and deallocate dynamic memory and how to expend array of dynamic memory. Basically, we cannot expand existing array of dynamic memory, but we allocate new dynamic memory. And then, I know how to copy the elements of original dynamic memory to new one. 





Quiz 1 Reflection:

1. What are the three main characteristics that a language must have in order to be called an OOP language? Enumerate them and explain one in a short sentence.
	1. Encapsulation: integration of data and logic.
	2. Inheritance: one class inherits the structure of another class
	3. Polymorphism:a single interface provides multiple implementations

2. Member functions of a class can be classified into three mutually exclusive categories. Enumerate them.
	1. queries(accessor methods) - report the state of the object
	2. special(manager methods) - create, assign and destroy an object
	3. modifier(mutator methods) - change the state of the object




